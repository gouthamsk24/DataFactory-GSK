{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DataFactory-GSK"
		},
		"AzureSqlDatabase_Goutham_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase_Goutham'"
		},
		"BlobStorage_azurestorage_Auto_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'BlobStorage_azurestorage_Auto'"
		},
		"BlobStorage_azurestorage_Goutham_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'BlobStorage_azurestorage_Goutham'"
		},
		"AzureKeyVault_SQLDB_Test_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://keyvaulttest-GSK.vault.azure.net/"
		},
		"ls_AzureSqlDatabase_AVK_Test_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "sqlconn"
		},
		"ls_akv_AzureBlobStorage_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "AzureBlobStorageLocation"
		},
		"ls_akv_Test_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://keyvaulttest-GSK.vault.azure.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyFromBlobToAzureSQLDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_o65",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "container-goutham//inputEmp_tq.txt"
							},
							{
								"name": "Destination",
								"value": "dbo.emp"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_o65",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_o65",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Copy Wizards"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-22T21:48:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_o65')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_o65')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_Blob_to_AzureDB_Manual')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "\n",
				"activities": [
					{
						"name": "Copy_Blob_to_AzureDB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE dbo.emp",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "azurestorage_Goutham_blob_inputemp_tq",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTGT_Emp",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Copy Wizards"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-26T23:50:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/azurestorage_Goutham_blob_inputemp_tq')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTGT_Emp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetMetadata_LastModifiedData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get_Metadata_LatsModified_AndMore",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "azurestorage_Goutham_blob_inputemp_tq",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"lastModified",
								"size",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "usp_InsertLastModified",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get_Metadata_LatsModified_AndMore",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_InsertLastModifiedDate]",
							"storedProcedureParameters": {
								"FileName": {
									"value": {
										"value": "@activity('Get_Metadata_LatsModified_AndMore').output.itemName\n",
										"type": "Expression"
									},
									"type": "String"
								},
								"ModifiedDate": {
									"value": {
										"value": "@activity('Get_Metadata_LatsModified_AndMore').output.lastModified\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RecordInsertDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_Goutham",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Copy Wizards"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-26T23:50:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/azurestorage_Goutham_blob_inputemp_tq')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IncrementalCopyPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupOldWaterMarkActivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WatermarkDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LookupNewWaterMarkActivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select MAX(LastModifytime) as NewWatermarkvalue from data_source_table",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "IncrementalCopyActivity",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupOldWaterMarkActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LookupNewWaterMarkActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from data_source_table where LastModifytime > '@{activity('LookupOldWaterMarkActivity').output.firstRow.WatermarkValue}' and LastModifytime <= '@{activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SinkDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "StoredProceduretoWriteWatermarkActivity",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "IncrementalCopyActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_dst_write_watermark]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": {
										"value": "@activity('LookupOldWaterMarkActivity').output.firstRow.TableName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_Goutham",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-04-27T16:59:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WatermarkDataset')]",
				"[concat(variables('factoryId'), '/datasets/SourceDataset')]",
				"[concat(variables('factoryId'), '/datasets/SinkDataset')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Metadata_LookUp_LastModifiedData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get_Metadata_LatsModified_AndMore",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "azurestorage_Goutham_blob_inputemp_tq",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"lastModified",
								"size",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Get_Last_Execution_Data",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_LastLoadDate]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DestinationDataset_o65",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition_DateCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get_Metadata_LatsModified_AndMore",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get_Last_Execution_Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(activity('Get_Metadata_LatsModified_AndMore').output.lastModified,activity('Get_Last_Execution_Data').output.firstrow.executiondate)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait_False",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy_Load_AzureSQL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": "TRUNCATE TABLE dbo.emp",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "FirstName",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "FirstName",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "LastName",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "LastName",
														"type": "String",
														"physicalType": "varchar"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "azurestorage_Goutham_blob_inputemp_tq",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTGT_Emp",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "usp_UpdateExecutionDate",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy_Load_AzureSQL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_UpdateLastExecutionDate]",
										"storedProcedureParameters": {
											"ExecutionDate": {
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase_Goutham",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Copy Wizards"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-26T23:50:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/azurestorage_Goutham_blob_inputemp_tq')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_o65')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTGT_Emp')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/child_ForEach')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop_FileList",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.FileList",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "usp_InsertRecords",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_InsertFileNames]",
										"storedProcedureParameters": {
											"DateInserted": {
												"value": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"filename": {
												"value": {
													"value": "@{item().name}",
													"type": "Expression"
												},
												"type": "String"
											},
											"Status": {
												"value": "1",
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase_Goutham",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FileList": {
						"type": "object"
					}
				},
				"folder": {
					"name": "Copy Wizards"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-26T23:50:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/child_ForEach_Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop_FileList_Load",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.FileList",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_Blob_to_AzureDB_InternetSales",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "azurestorage_Blob_InternetSales",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTable_FactInternetSales",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FileList": {
						"type": "object"
					}
				},
				"folder": {
					"name": "Copy Wizards"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-26T23:50:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/azurestorage_Blob_InternetSales')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_FactInternetSales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/parent_Get_List_Of_Files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Metadata_Get_List_of_Files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AzureStorageAccount_Blob_InternetSales_Folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Execute_child_ForEach",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Metadata_Get_List_of_Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "child_ForEach",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"FileList": {
									"value": "@activity('Metadata_Get_List_of_Files').output.childItems",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Copy Wizards"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-26T23:50:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureStorageAccount_Blob_InternetSales_Folder')]",
				"[concat(variables('factoryId'), '/pipelines/child_ForEach')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/parent_Get_List_Of_Files_ForLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Metadata_Get_List_of_Files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AzureStorageAccount_Blob_InternetSales_Folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Execute_child_ForEach",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "filter_factinternetsales_meta",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "child_ForEach_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"FileList": {
									"value": "@activity('filter_factinternetsales_meta').output.value",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "filter_factinternetsales_meta",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Metadata_Get_List_of_Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Metadata_Get_List_of_Files').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'FactInternetSales_')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Copy Wizards"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-26T23:50:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureStorageAccount_Blob_InternetSales_Folder')]",
				"[concat(variables('factoryId'), '/pipelines/child_ForEach_Load')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_AKV_SQL_Conn_Test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "akv_sql_blobcon_Test",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_AKV_tgt_Test",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-02T23:58:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_AzureSqlTable')]",
				"[concat(variables('factoryId'), '/datasets/ds_AKV_tgt_Test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_Copy_Activity_Blob_to_AzureSQLTable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "BlobtoAzureSQLTable",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PersonID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Personid",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PersonName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifytime",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastModifyTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable_Person",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Copy Wizards"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-26T23:50:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_Person')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_GetMetadata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get_Metadata_of_SrcFiles",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_Azure_SourceFiles",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-04-27T23:17:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/blob_Azure_SourceFiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_Wait')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait5",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_WaterMark_Test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetMaxValuefromSRC",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select max(lastModifyTime) AS WatermarkValue  from [dbo].[person]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable_Person",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "GetLastExecutedDatefromWaterMarkTBL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT WatermarkValue FROM watermarktable",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable_WaterMarkDS",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetMaxValuefromSRC",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GetLastExecutedDatefromWaterMarkTBL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM [dbo].[person]\nwhere \nlastModifyTime > '@{activity('GetLastExecutedDatefromWaterMarkTBL').output.firstRow.WatermarkValue}' and\nlastModifyTime <='@{activity('GetMaxValuefromSRC').output.firstRow.WatermarkValue}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable_Person",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_ProductsFinal",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "UpdateWaterMarkTBL",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[update_watermark]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@activity('GetMaxValuefromSRC').output.firstRow.WaterMarkValue",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_Goutham",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-04-27T22:47:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_Person')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_WaterMarkDS')]",
				"[concat(variables('factoryId'), '/datasets/blob_ProductsFinal')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_akv_conn_test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Azure Key Vault",
				"activities": [
					{
						"name": "AKV_Conn_Test",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_AKV_src_Test",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_AKV_tgt_Test",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-05-02T23:12:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_AKV_src_Test')]",
				"[concat(variables('factoryId'), '/datasets/ds_AKV_tgt_Test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_df_Customer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfCustomer",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_Customer",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"cusotmertest": {},
									"customertgt": {},
									"customerpktest": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-04-26T20:36:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_Customer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_df_Products_blob_Storage')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Run_df_ProductFinal",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_Products_Final",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ProductsAll": {},
									"ProductModel": {},
									"ProductFinalSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Copy Wizards"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-27T22:05:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_Products_Final')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dl_EMPLOYEES_DEPTNAME')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dl_EMPLOYEES_DEPTNAME",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dl_EMPLOYEES_DEPTNAME",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EMPLOYEES": {},
									"DEPT": {},
									"EMPTGT": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "dl_EMP_DEPT_CONDITIONALSPLIT_LKP",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "dl_EMPLOYEES_DEPTNAME",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_Employees_Dept_Lookup",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EMPLOYEES": {},
									"DEPT": {},
									"sinkDEPT10": {},
									"sinkDept30": {},
									"sinkDeptsOthers": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "dfEmpsUnion",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "dl_EMP_DEPT_CONDITIONALSPLIT_LKP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_Emp_Union",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SRCEmpDept10": {},
									"SRCEmpDept30": {},
									"SRCEmpDeptOthers": {},
									"sinkEmpDepts": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-04-26T23:00:13Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dl_EMPLOYEES_DEPTNAME')]",
				"[concat(variables('factoryId'), '/dataflows/df_Employees_Dept_Lookup')]",
				"[concat(variables('factoryId'), '/dataflows/df_Emp_Union')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTGT_Emp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Goutham",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "emp"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable_Customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Goutham",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "bal",
						"type": "int",
						"precision": 10
					},
					{
						"name": "lastModifiedTime",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "customer_test"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable_Customer_pktest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Goutham",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "bal",
						"type": "int",
						"precision": 10
					},
					{
						"name": "lastModifiedTime",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "customer_pktest"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable_DEPT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Goutham",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DEPTID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DEPTNAME",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DEPT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable_EMPLOYEES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Goutham",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EMPID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ENAME",
						"type": "varchar"
					},
					{
						"name": "SAL",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DEPTID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EMPLOYEES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable_EMPTGT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Goutham",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EMPID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ENAME",
						"type": "varchar"
					},
					{
						"name": "SAL",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DEPTNAME",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EMPTGT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable_Emp_Dept_10')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Goutham",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EMPID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ENAME",
						"type": "varchar"
					},
					{
						"name": "SAL",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DEPTID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DEPTNAME",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EMP_DEPT_10"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable_Emp_Dept_30')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Goutham",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EMPID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ENAME",
						"type": "varchar"
					},
					{
						"name": "SAL",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DEPTID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DEPTNAME",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EMP_DEPT_30"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable_Emp_Depts_Others')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Goutham",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EMPID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ENAME",
						"type": "varchar"
					},
					{
						"name": "SAL",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DEPTID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DEPTNAME",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EMP_OTHER_DEPTS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable_FactInternetSales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Goutham",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Copy Wizard DataSets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderDateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DueDateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ShipDateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PromotionKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrencyKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesTerritoryKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "SalesOrderLineNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "RevisionNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "OrderQuantity",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "UnitPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ExtendedAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "UnitPriceDiscountPct",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DiscountAmount",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ProductStandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalProductCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "SalesAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TaxAmt",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "CarrierTrackingNumber",
						"type": "nvarchar"
					},
					{
						"name": "CustomerPONumber",
						"type": "nvarchar"
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DueDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShipDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FactInternetSales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable_Person')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Goutham",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Personid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PersonName",
						"type": "varchar"
					},
					{
						"name": "LastModifyTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "person"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable_Tgt_Emp_Union')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Goutham",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EMPID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ENAME",
						"type": "varchar"
					},
					{
						"name": "SAL",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DEPTID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DEPTNAME",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EMP_Union_Tgt"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable_WaterMarkDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Goutham",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TableName",
						"type": "varchar"
					},
					{
						"name": "WatermarkValue",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dst_watermarktable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureStorageAccount_Blob_InternetSales_Folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage_azurestorage_Goutham",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Copy Wizard DataSets"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "InternetSales",
						"container": "container-goutham"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage_azurestorage_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage_azurestorage_Goutham",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Person.txt",
						"container": "container-goutham"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "PersonID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "LastModifytime",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage_azurestorage_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_o65')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Goutham",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Copy Wizard DataSets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "FirstName",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "LastName",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "emp"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage_azurestorage_Goutham",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Incremental.txt",
						"folderPath": "Scenarios",
						"container": "container-goutham"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage_azurestorage_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Goutham",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "LastModifytime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "data_source_table"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_o65')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage_azurestorage_Goutham",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Copy Wizard DataSets"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "inputEmp_tq.txt",
						"container": "container-goutham"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage_azurestorage_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WatermarkDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Goutham",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TableName",
						"type": "varchar"
					},
					{
						"name": "WatermarkValue",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dst_watermarktable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azurestorage_Blob_InternetSales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage_azurestorage_Goutham",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Copy Wizard DataSets"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@{item().name}",
							"type": "Expression"
						},
						"folderPath": "InternetSales",
						"container": "container-goutham"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage_azurestorage_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/azurestorage_Goutham_blob_inputemp_tq')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage_azurestorage_Goutham",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Copy Wizard DataSets"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "inputEmp_tq.txt",
						"container": "container-goutham"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage_azurestorage_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_Azure_SourceFiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage_azurestorage_Goutham",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "SourceFiles",
						"container": "container-goutham"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Index;MovieTitle",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage_azurestorage_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_ProductInventory')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage_azurestorage_Auto",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Copy Wizard DataSets"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ProductInventory.txt",
						"folderPath": "Products",
						"container": "container-goutham"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ProductID",
						"type": "String"
					},
					{
						"name": "LocationID",
						"type": "String"
					},
					{
						"name": "Shelf",
						"type": "String"
					},
					{
						"name": "Bin",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "ModifiedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage_azurestorage_Auto')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_ProductModel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage_azurestorage_Goutham",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Copy Wizard DataSets"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ProductModel_Lookup.txt",
						"folderPath": "Products",
						"container": "container-goutham"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ProductModelID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage_azurestorage_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_ProductsAll')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage_azurestorage_Goutham",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Copy Wizard DataSets"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Products_All.txt",
						"folderPath": "Products",
						"container": "container-goutham"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ProductID|Name|ProductNumber|MakeFlag|FinishedGoodsFlag|Color|SafetyStockLevel|ReorderPoint|StandardCost|ListPrice|Size|SizeUnitMeasureCode|WeightUnitMeasureCode|Weight|DaysToManufacture|ProductLine|Class|Style|ProductSubcategoryID|ProductModelID|SellStartDate|SellEndDate|DiscontinuedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage_azurestorage_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_ProductsFinal')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage_azurestorage_Goutham",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "container-goutham"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ProductKey",
						"type": "String"
					},
					{
						"name": "OrderDateKey",
						"type": "String"
					},
					{
						"name": "DueDateKey",
						"type": "String"
					},
					{
						"name": "ShipDateKey",
						"type": "String"
					},
					{
						"name": "CustomerKey",
						"type": "String"
					},
					{
						"name": "PromotionKey",
						"type": "String"
					},
					{
						"name": "CurrencyKey",
						"type": "String"
					},
					{
						"name": "SalesTerritoryKey",
						"type": "String"
					},
					{
						"name": "SalesOrderNumber",
						"type": "String"
					},
					{
						"name": "SalesOrderLineNumber",
						"type": "String"
					},
					{
						"name": "RevisionNumber",
						"type": "String"
					},
					{
						"name": "OrderQuantity",
						"type": "String"
					},
					{
						"name": "UnitPrice",
						"type": "String"
					},
					{
						"name": "ExtendedAmount",
						"type": "String"
					},
					{
						"name": "UnitPriceDiscountPct",
						"type": "String"
					},
					{
						"name": "DiscountAmount",
						"type": "String"
					},
					{
						"name": "ProductStandardCost",
						"type": "String"
					},
					{
						"name": "TotalProductCost",
						"type": "String"
					},
					{
						"name": "SalesAmount",
						"type": "String"
					},
					{
						"name": "TaxAmt",
						"type": "String"
					},
					{
						"name": "Freight",
						"type": "String"
					},
					{
						"name": "CarrierTrackingNumber",
						"type": "String"
					},
					{
						"name": "CustomerPONumber",
						"type": "String"
					},
					{
						"name": "OrderDate",
						"type": "String"
					},
					{
						"name": "DueDate",
						"type": "String"
					},
					{
						"name": "ShipDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage_azurestorage_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_AKV_src_Test')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_akv_AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TopMovies_Part1.csv",
						"folderPath": "SourceFiles",
						"container": "container-goutham"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Index;MovieTitle",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_akv_AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_AKV_tgt_Test')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_akv_AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "emploc",
						"container": "container-goutham"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ProductKey",
						"type": "String"
					},
					{
						"name": "OrderDateKey",
						"type": "String"
					},
					{
						"name": "DueDateKey",
						"type": "String"
					},
					{
						"name": "ShipDateKey",
						"type": "String"
					},
					{
						"name": "CustomerKey",
						"type": "String"
					},
					{
						"name": "PromotionKey",
						"type": "String"
					},
					{
						"name": "CurrencyKey",
						"type": "String"
					},
					{
						"name": "SalesTerritoryKey",
						"type": "String"
					},
					{
						"name": "SalesOrderNumber",
						"type": "String"
					},
					{
						"name": "SalesOrderLineNumber",
						"type": "String"
					},
					{
						"name": "RevisionNumber",
						"type": "String"
					},
					{
						"name": "OrderQuantity",
						"type": "String"
					},
					{
						"name": "UnitPrice",
						"type": "String"
					},
					{
						"name": "ExtendedAmount",
						"type": "String"
					},
					{
						"name": "UnitPriceDiscountPct",
						"type": "String"
					},
					{
						"name": "DiscountAmount",
						"type": "String"
					},
					{
						"name": "ProductStandardCost",
						"type": "String"
					},
					{
						"name": "TotalProductCost",
						"type": "String"
					},
					{
						"name": "SalesAmount",
						"type": "String"
					},
					{
						"name": "TaxAmt",
						"type": "String"
					},
					{
						"name": "Freight",
						"type": "String"
					},
					{
						"name": "CarrierTrackingNumber",
						"type": "String"
					},
					{
						"name": "CustomerPONumber",
						"type": "String"
					},
					{
						"name": "OrderDate",
						"type": "String"
					},
					{
						"name": "DueDate",
						"type": "String"
					},
					{
						"name": "ShipDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_akv_AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_AzureSqlTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_AzureSqlDatabase_AVK_Test",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EMPID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EMPNAME",
						"type": "varchar"
					},
					{
						"name": "EMPSAL",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EMPLOCATION",
						"type": "varchar"
					},
					{
						"name": "DEPTID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EMPLOCATION"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_AzureSqlDatabase_AVK_Test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage_azurestorage_Goutham",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "customer.txt",
						"folderPath": "Scenarios",
						"container": "container-goutham"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "Lastname",
						"type": "String"
					},
					{
						"name": "AccountBalance",
						"type": "String"
					},
					{
						"name": "LastModifytime",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage_azurestorage_Goutham')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault_SQLDB_Test')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault_SQLDB_Test_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase_Goutham')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_Goutham_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobStorage_azurestorage_Auto')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('BlobStorage_azurestorage_Auto_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobStorage_azurestorage_Goutham')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('BlobStorage_azurestorage_Goutham_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_AzureSqlDatabase_AVK_Test')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault_SQLDB_Test",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('ls_AzureSqlDatabase_AVK_Test_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault_SQLDB_Test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_akv_AzureBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_akv_Test",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('ls_akv_AzureBlobStorage_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_akv_Test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_akv_Test')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('ls_akv_Test_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GouthamSKLocalMachine')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_Customer')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_customer",
								"type": "DatasetReference"
							},
							"name": "cusotmertest"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable_Customer",
								"type": "DatasetReference"
							},
							"name": "customertgt"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable_Customer_pktest",
								"type": "DatasetReference"
							},
							"name": "customerpktest"
						}
					],
					"transformations": [
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CustomerID as string,",
						"          FirstName as string,",
						"          Lastname as string,",
						"          AccountBalance as string,",
						"          LastModifytime as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> cusotmertest",
						"cusotmertest alterRow(upsertIf(true())) ~> alterRow1",
						"cusotmertest sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CustId as integer,",
						"          FirstName as string,",
						"          LastName as string,",
						"          bal as integer,",
						"          lastModifiedTime as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          CustId = CustomerID,",
						"          FirstName,",
						"          LastName = Lastname,",
						"          bal = AccountBalance,",
						"          lastModifiedTime = LastModifytime",
						"     )) ~> customertgt",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CustId as integer,",
						"          FirstName as string,",
						"          LastName as string,",
						"          bal as integer,",
						"          lastModifiedTime as string",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['CustId'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          CustId = CustomerID,",
						"          FirstName,",
						"          LastName = Lastname,",
						"          bal = AccountBalance,",
						"          lastModifiedTime = LastModifytime",
						"     )) ~> customerpktest"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_customer')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_Customer')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_Customer_pktest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_Emp_Union')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable_Emp_Dept_10",
								"type": "DatasetReference"
							},
							"name": "SRCEmpDept10"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable_Emp_Dept_30",
								"type": "DatasetReference"
							},
							"name": "SRCEmpDept30"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable_Emp_Depts_Others",
								"type": "DatasetReference"
							},
							"name": "SRCEmpDeptOthers"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable_Tgt_Emp_Union",
								"type": "DatasetReference"
							},
							"name": "sinkEmpDepts"
						}
					],
					"transformations": [
						{
							"name": "unionAllDeptsEmps"
						},
						{
							"name": "sortDepts"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EMPID as integer,",
						"          ENAME as string,",
						"          SAL as integer,",
						"          DEPTID as integer,",
						"          DEPTNAME as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> SRCEmpDept10",
						"source(output(",
						"          EMPID as integer,",
						"          ENAME as string,",
						"          SAL as integer,",
						"          DEPTID as integer,",
						"          DEPTNAME as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> SRCEmpDept30",
						"source(output(",
						"          EMPID as integer,",
						"          ENAME as string,",
						"          SAL as integer,",
						"          DEPTID as integer,",
						"          DEPTNAME as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> SRCEmpDeptOthers",
						"SRCEmpDept10, SRCEmpDept30, SRCEmpDeptOthers union(byName: true)~> unionAllDeptsEmps",
						"unionAllDeptsEmps sort(asc(DEPTID, true)) ~> sortDepts",
						"sortDepts sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          EMPID as integer,",
						"          ENAME as string,",
						"          SAL as integer,",
						"          DEPTID as integer,",
						"          DEPTNAME as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sinkEmpDepts"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_Emp_Dept_10')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_Emp_Dept_30')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_Emp_Depts_Others')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_Tgt_Emp_Union')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_Employees_Dept_Lookup')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable_EMPLOYEES",
								"type": "DatasetReference"
							},
							"name": "EMPLOYEES"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable_DEPT",
								"type": "DatasetReference"
							},
							"name": "DEPT"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable_Emp_Dept_10",
								"type": "DatasetReference"
							},
							"name": "sinkDEPT10"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable_Emp_Dept_30",
								"type": "DatasetReference"
							},
							"name": "sinkDept30"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable_Emp_Depts_Others",
								"type": "DatasetReference"
							},
							"name": "sinkDeptsOthers"
						}
					],
					"transformations": [
						{
							"name": "lookupDept"
						},
						{
							"name": "splitDept1030"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EMPID as integer,",
						"          ENAME as string,",
						"          SAL as integer,",
						"          DEPTID as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> EMPLOYEES",
						"source(output(",
						"          DEPTID as integer,",
						"          DEPTNAME as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DEPT",
						"EMPLOYEES, DEPT lookup(EMPLOYEES@DEPTID == DEPT@DEPTID,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> lookupDept",
						"lookupDept split(DEPT@DEPTID==10,",
						"     DEPT@DEPTID==30,",
						"     disjoint: false) ~> splitDept1030@(DeptId10, DeptId30, AllOtherDepts)",
						"splitDept1030@DeptId10 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          EMPID as integer,",
						"          ENAME as string,",
						"          SAL as integer,",
						"          DEPTID as integer,",
						"          DEPTNAME as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          EMPID,",
						"          ENAME,",
						"          SAL,",
						"          DEPTID = splitDept1030@DeptId10@DEPTID,",
						"          DEPTNAME",
						"     )) ~> sinkDEPT10",
						"splitDept1030@DeptId30 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          EMPID as integer,",
						"          ENAME as string,",
						"          SAL as integer,",
						"          DEPTID as integer,",
						"          DEPTNAME as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 3,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          EMPID,",
						"          ENAME,",
						"          SAL,",
						"          DEPTID = splitDept1030@DeptId30@DEPTID,",
						"          DEPTNAME",
						"     )) ~> sinkDept30",
						"splitDept1030@AllOtherDepts sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          EMPID as integer,",
						"          ENAME as string,",
						"          SAL as integer,",
						"          DEPTID as integer,",
						"          DEPTNAME as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 2,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          EMPID,",
						"          ENAME,",
						"          SAL,",
						"          DEPTID = splitDept1030@AllOtherDepts@DEPTID,",
						"          DEPTNAME",
						"     )) ~> sinkDeptsOthers"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_EMPLOYEES')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_DEPT')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_Emp_Dept_10')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_Emp_Dept_30')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_Emp_Depts_Others')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_Products_Final')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "blob_ProductsAll",
								"type": "DatasetReference"
							},
							"name": "ProductsAll"
						},
						{
							"dataset": {
								"referenceName": "blob_ProductModel",
								"type": "DatasetReference"
							},
							"name": "ProductModel"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "blob_ProductsFinal",
								"type": "DatasetReference"
							},
							"name": "ProductFinalSink"
						}
					],
					"transformations": [
						{
							"name": "ModelNameLookUp"
						},
						{
							"name": "PaddedWeightColumn"
						},
						{
							"name": "CleanupColumns"
						},
						{
							"name": "RemovingEmptyListPrice"
						},
						{
							"name": "ListPriceDesc"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ProductID as short,",
						"          Name as string,",
						"          ProductNumber as string,",
						"          MakeFlag as boolean,",
						"          FinishedGoodsFlag as boolean,",
						"          Color as string,",
						"          SafetyStockLevel as short,",
						"          ReorderPoint as short,",
						"          StandardCost as double,",
						"          ListPrice as double,",
						"          Size as string,",
						"          SizeUnitMeasureCode as string,",
						"          WeightUnitMeasureCode as string,",
						"          Weight as integer,",
						"          DaysToManufacture as short,",
						"          ProductLine as string,",
						"          Class as string,",
						"          Style as string,",
						"          ProductSubcategoryID as short,",
						"          ProductModelID as short,",
						"          SellStartDate as timestamp,",
						"          SellEndDate as timestamp,",
						"          DiscontinuedDate as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ProductsAll",
						"source(output(",
						"          ProductModelID as short,",
						"          Name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> ProductModel",
						"ProductsAll, ProductModel lookup(ProductsAll@ProductModelID == ProductModel@ProductModelID,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> ModelNameLookUp",
						"ModelNameLookUp derive(PaddedWeight = Weight*1.10) ~> PaddedWeightColumn",
						"PaddedWeightColumn select(mapColumn(",
						"          ProductID,",
						"          Name = ProductsAll@Name,",
						"          ProductNumber,",
						"          MakeFlag,",
						"          FinishedGoodsFlag,",
						"          Color,",
						"          SafetyStockLevel,",
						"          ReorderPoint,",
						"          StandardCost,",
						"          ListPrice,",
						"          Size,",
						"          SizeUnitMeasureCode,",
						"          WeightUnitMeasureCode,",
						"          Weight,",
						"          DaysToManufacture,",
						"          ProductLine,",
						"          Class,",
						"          Style,",
						"          ProductSubcategoryID,",
						"          ProductModelID = ProductsAll@ProductModelID,",
						"          SellStartDate,",
						"          SellEndDate,",
						"          DiscontinuedDate,",
						"          ModelName = ProductModel@Name,",
						"          PaddedWeight",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> CleanupColumns",
						"CleanupColumns filter(notEquals(ListPrice,0)) ~> RemovingEmptyListPrice",
						"RemovingEmptyListPrice sort(desc(ListPrice, true)) ~> ListPriceDesc",
						"ListPriceDesc sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ProductKey as string,",
						"          OrderDateKey as string,",
						"          DueDateKey as string,",
						"          ShipDateKey as string,",
						"          CustomerKey as string,",
						"          PromotionKey as string,",
						"          CurrencyKey as string,",
						"          SalesTerritoryKey as string,",
						"          SalesOrderNumber as string,",
						"          SalesOrderLineNumber as string,",
						"          RevisionNumber as string,",
						"          OrderQuantity as string,",
						"          UnitPrice as string,",
						"          ExtendedAmount as string,",
						"          UnitPriceDiscountPct as string,",
						"          DiscountAmount as string,",
						"          ProductStandardCost as string,",
						"          TotalProductCost as string,",
						"          SalesAmount as string,",
						"          TaxAmt as string,",
						"          Freight as string,",
						"          CarrierTrackingNumber as string,",
						"          CustomerPONumber as string,",
						"          OrderDate as string,",
						"          DueDate as string,",
						"          ShipDate as string",
						"     ),",
						"     partitionFileNames:['Products_Final_FromDF'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> ProductFinalSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/blob_ProductsAll')]",
				"[concat(variables('factoryId'), '/datasets/blob_ProductModel')]",
				"[concat(variables('factoryId'), '/datasets/blob_ProductsFinal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dl_EMPLOYEES_DEPTNAME')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "We will be loading the employee details along with their respective department names",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable_EMPLOYEES",
								"type": "DatasetReference"
							},
							"name": "EMPLOYEES"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable_DEPT",
								"type": "DatasetReference"
							},
							"name": "DEPT"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable_EMPTGT",
								"type": "DatasetReference"
							},
							"name": "EMPTGT"
						}
					],
					"transformations": [
						{
							"name": "JNREMPDEPT"
						},
						{
							"name": "sortSAL"
						},
						{
							"name": "alterRow1"
						},
						{
							"name": "SALINCREMENT"
						}
					],
					"scriptLines": [
						"source(output(",
						"          EMPID as integer,",
						"          ENAME as string,",
						"          SAL as integer,",
						"          DEPTID as integer",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> EMPLOYEES",
						"source(output(",
						"          DEPTID as integer,",
						"          DEPTNAME as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DEPT",
						"EMPLOYEES, DEPT join(EMPLOYEES@DEPTID == DEPT@DEPTID,",
						"     joinType:'inner',",
						"     broadcast: 'auto')~> JNREMPDEPT",
						"SALINCREMENT sort(asc(SAL, true)) ~> sortSAL",
						"sortSAL alterRow(upsertIf(true())) ~> alterRow1",
						"JNREMPDEPT derive(SAL = SAL+1500) ~> SALINCREMENT",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          EMPID as integer,",
						"          ENAME as string,",
						"          SAL as integer,",
						"          DEPTNAME as string",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['EMPID'],",
						"     format: 'table',",
						"     preSQLs:['truncate table emptgt;'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          EMPID,",
						"          ENAME,",
						"          SAL,",
						"          DEPTNAME",
						"     )) ~> EMPTGT"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_EMPLOYEES')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_DEPT')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable_EMPTGT')]"
			]
		}
	]
}